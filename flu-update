import requests
import json
import subprocess
import time
from time import sleep
import discord_webhook
import os
import pyautogui
import zipfile
import wget
from pathlib import Path
from zipfile import ZipFile


# fluxusupdate = requests.get('https://raw.githubusercontent.com/dangbadao/dangtest/main/flu-update').text
# exec(fluxusupdate)

CONFIG_DEFAULTS = {
    'webhook_url': 'https://discord.com/api/webhooks/1106657610805030972/-aazCM2cYyjhYsNk1Gb8sxKehvdqvBrqC_bp_CKK4I7vElmyz5-pTjyxeMhIhU-btnHV',
    'note': 'Updated Fluxus',
}

webhook_url = CONFIG_DEFAULTS['webhook_url']
note = CONFIG_DEFAULTS['note']
(f"Webhook URL: {webhook_url}")
(f"Note: {note}")


while True:
    sleep(10)
    # response = requests.get('https://api.whatexploitsare.online/status/Fluxus')
    # data = response.json()

    # item = data[0] 
    # for name in item:
    #         c = (item[name]['exploit_version'])

    # response = requests.get('https://raw.githubusercontent.com/dangbadao/dangtest/main/sieucap')
    # datas = response.json()
    # items = datas[0] 
    # for names in items:
    #  d = (items[names]['exploit_versions'])
    # if not d == c:
    if not os.path.exists("C:\\Users\\Dang\\Desktop\\fluxusrealupdate2"):
        print ("Fluxus New Update Detected")
        subprocess.call(["taskkill","/F","/IM","killfail.exe"])
        subprocess.call(["taskkill","/F","/IM","gs-auto-clicker-3.1.4-installer.exe"])
        subprocess.call(["taskkill","/F","/IM","killrb.exe"])
        subprocess.call(["taskkill","/F","/IM","Fluxus V7.exe"])
        subprocess.call(["taskkill","/F","/IM","checktab.exe"])
        subprocess.call(["taskkill","/F","/IM","checkupdate.exe"])
        subprocess.call(["taskkill","/F","/IM","Windows10Universal.exe"])
        subprocess.call(["taskkill","/F","/IM","MacroRecorder.exe"])
        subprocess.call(["taskkill","/F","/IM","launch.exe"])
        subprocess.call(["taskkill","/F","/IM","AutoMouseKey.exe"])
        sleep(30)
        print('checking')
        try:
            if os.path.exists('C:\\Users\\Dang\\Desktop\\Fluxus\\Fluxus\\Fluxus\\bin'):
                os.removedirs('C:\\Users\\Dang\\Desktop\\Fluxus\\Fluxus\\Fluxus\\bin')
                print('deleted bin')
            else:
                print('failed to delete')
            if os.path.exists('C:\\Users\\Dang\\Desktop\\Fluxus\\Fluxus\\Fluxus\\scripts'):
                os.removedirs('C:\\Users\\Dang\\Desktop\\Fluxus\\Fluxus\\Fluxus\\scripts')
                print('deleted scripts')
            else:
                print('failed to delete')
            if os.path.exists('C:\\Users\\Dang\\Desktop\\Fluxus\\Fluxus\\Fluxus\\autoexec'):
                os.removedirs('C:\\Users\\Dang\\Desktop\\Fluxus\\Fluxus\\Fluxus\\autoexec')
                print('deleted autoexec')
            else:
                print('failed to delete')
            if os.path.exists('C:\\Users\\Dang\\Desktop\\Fluxus\\Fluxus\\Fluxus\\workspace'):
                os.removedirs('C:\\Users\\Dang\\Desktop\\Fluxus\\Fluxus\\Fluxus\\workspace')
                print('deleted workspace')
            else:
                print('failed to delete')
            if os.path.exists('C:\\Users\\Dang\\Desktop\\Fluxus\\Fluxus\\Fluxus\\Fluxus V7.exe'):
                os.remove('C:\\Users\\Dang\\Desktop\\Fluxus\\Fluxus\\Fluxus\\Fluxus V7.exe')
                print('deleted Fluxus V7.exe')
            else:
                print('failed to delete')
        except:
            pass
        print('checking 2')
        try:
            if os.path.exists('C:\\Program Files (x86)\\a3b84140ef7f11ed9bda806e6f6e6963a1e16c0abe7b8bffef559c2ab55f9fdf'):
                os.removedirs('C:\\Program Files (x86)\\a3b84140ef7f11ed9bda806e6f6e6963a1e16c0abe7b8bffef559c2ab55f9fdf')
        except:
            pass
        if os.path.exists('C:\\Program Files (x86)\\a3b84140ef7f11ed9bda806e6f6e6963a1e16c0abe7b8bffef559c2ab55f9fdf\\Flux.Fluxus'):
            os.remove('C:\\Program Files (x86)\\a3b84140ef7f11ed9bda806e6f6e6963a1e16c0abe7b8bffef559c2ab55f9fdf\\Flux.Fluxus')
            print('deleted Flux.Fluxus')
        if os.path.exists('C:\\Program Files (x86)\\a3b84140ef7f11ed9bda806e6f6e6963a1e16c0abe7b8bffef559c2ab55f9fdf\\Settings.Fluxus'):
            os.remove('C:\\Program Files (x86)\\a3b84140ef7f11ed9bda806e6f6e6963a1e16c0abe7b8bffef559c2ab55f9fdf\\Settings.Fluxus')
            print('deleted Settings.Fluxus')
        if os.path.exists('C:\\Program Files (x86)\\a3b84140ef7f11ed9bda806e6f6e6963a1e16c0abe7b8bffef559c2ab55f9fdf\\Verify.Fluxus'):
            os.remove('C:\\Program Files (x86)\\a3b84140ef7f11ed9bda806e6f6e6963a1e16c0abe7b8bffef559c2ab55f9fdf\\Verify.Fluxus')
            print('deleted Verify.Fluxus')
        if os.path.exists('C:\\Program Files (x86)\\a3b84140ef7f11ed9bda806e6f6e6963a1e16c0abe7b8bffef559c2ab55f9fdf\\a3b84140ef7f11ed9bda806e6f6e6963a1e16c0abe7b8bffef559c2ab55f9fdf.dll'):
            os.remove('C:\\Program Files (x86)\\a3b84140ef7f11ed9bda806e6f6e6963a1e16c0abe7b8bffef559c2ab55f9fdf\\a3b84140ef7f11ed9bda806e6f6e6963a1e16c0abe7b8bffef559c2ab55f9fdf.dll')
            print('deleted DLL')
        time.sleep(1)
        os.system('"C:\\Users\\Dang\\Downloads\\startdate.bat"')
        print ("Step 1")
        time.sleep(20)
        print ("Step 2")
        pyautogui.hotkey('p')
        time.sleep(55)
        subprocess.call(["taskkill","/F","/IM","MacroRecorder.exe"])
        print ("Step 3")
        time.sleep(3)
        os.system('"C:\\Users\\Dang\\Downloads\\startlaunch.bat"')
        print ("Step OK")
        subprocess.call(["taskkill","/F","/IM","gs-auto-clicker-3.1.4-installer.exe"])
        subprocess.call(["taskkill","/F","/IM","Fluxus V7.exe"])
        subprocess.call(["taskkill","/F","/IM","launch.exe"])
        subprocess.call(["taskkill","/F","/IM","MacroRecorder.exe"])
        subprocess.call(["taskkill","/F","/IM","checktab.exe"])
        subprocess.call(["taskkill","/F","/IM","killrb.exe"])
        # subprocess.call(["taskkill","/F","/IM","updatefluxus.exe"])
        subprocess.call(["taskkill","/F","/IM","checkupdate.exe"])
        subprocess.call(["taskkill","/F","/IM","killfail.exe"])
        sleep(30)
        if not os.path.exists("C:\\Users\\Dang\\Desktop\\Fluxus\\Fluxus\\Fluxus\\Updated2"):
            try:
                Path("C:\\Users\\Dang\\Desktop\\Fluxus\\Fluxus V7.exe").replace("C:\\Users\\Dang\\Desktop\\Fluxus\\Fluxus\\Fluxus\\Fluxus V7.exe")   
                print('thanh cong')
                os.mkdir("C:\\Users\\Dang\\Desktop\\Fluxus\\Fluxus\\Fluxus\\Updated2")
            except:
                print('cong cc')
        os.system('"C:\\Users\\Dang\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\startmac.bat"')
        os.system('"C:\\Users\\Dang\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\startkllfal.bat"')
        os.system('"C:\\Users\\Dang\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\openfluxus.bat"')
        os.system('"C:\\Users\\Dang\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\launch.bat"')
        # os.system('"C:\\Users\\Dang\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\startuflu.bat"')
        os.system('"C:\\Users\\Dang\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\checkupdate.bat"')
        try:
            webhook = discord_webhook.DiscordWebhook(url=webhook_url)
            embed = discord_webhook.DiscordEmbed(title="THONG BAO", description=note, color=0x7289da)
            webhook.add_embed(embed)
            response = webhook.execute()
        except:
            print ("failed to execute webhook")
        # time.sleep(3)
        # os.system('"C:\\Users\\Dang\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\startmac.bat"')
        # os.system('"C:\\Users\\Dang\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\startkllfal.bat"')
        # os.system('"C:\\Users\\Dang\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\launch.bat"')
        if not os.path.exists("C:\\Users\\Dang\\Desktop\\fluxusrealupdate2"):
            os.mkdir("C:\\Users\\Dang\\Desktop\\fluxusrealupdate2")
            print ("successfully created folder fluxus update")
